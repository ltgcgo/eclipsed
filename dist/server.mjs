"use strict";let Y=Object.defineProperty;let V=(e,t,n)=>t in e?Y(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;let p=(e,t,n)=>(V(e,typeof t!="symbol"?t+"":t,n),n),C=(e,t,n)=>{if(!t.has(e))throw TypeError("Cannot "+n)};let E=(e,t,n)=>(C(e,t,"read from private field"),n?n.call(e):t.get(e)),v=(e,t,n)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,n)},A=(e,t,n,r)=>(C(e,t,"write to private field"),r?r.call(e,n):t.set(e,n),n);let D=(e,t,n)=>(C(e,t,"access private method"),n);let $=["utf-8","utf-16","utf-16be"],x,k,b,W=(x=class extends EventTarget{constructor(t,n=0){super();v(this,k,void 0);v(this,b,void 0);if(n?.constructor!=Number||n<0||n>=$.length)throw new TypeError("Invalid split mode");if(n)throw new Error("UTF-16LE/BE currently not implemented");if(!t||t?.constructor!=ReadableStream)throw new TypeError("Not a readable stream");A(this,k,t);let r=t.getReader();A(this,b,new TextDecoder($[n],{fatal:!0}));let c=!0,a=!0,s;(async()=>{for(r.closed.then(()=>{s&&(this.dispatchEvent(new MessageEvent("raw",{data:s})),s=void 0),this.dispatchEvent(new Event("close")),a=!1}).catch(d=>{s&&(this.dispatchEvent(new MessageEvent("raw",{data:s})),s=void 0),this.dispatchEvent(new ErrorEvent("error",{message:d.message,error:d})),this.dispatchEvent(new Event("close")),a=!1});c&&a;)try{let d=await r.read();if(c=!d.done,c){let o=d.value;if(this.dispatchEvent(new MessageEvent("chunk",{data:o})),o.constructor!=Uint8Array&&o.constructor!=Uint8ClampedArray)this.dispatchEvent(new MessageEvent("fail",{data:o}));else{let i=0,f=0,O=0,m=!1;for(let h=0;h<o.length;h++){switch(o[h]){case 10:{O==13?i++:(m=!0,f=h);break}case 13:{m=!0,f=h;break}default:m=!1}if(m){let u=o.subarray(i,f),T=u;s&&(T=new Uint8Array(s.length+u.length),T.set(s),T.set(u,s.length),s=void 0),this.dispatchEvent(new MessageEvent("raw",{data:T}));try{let z=E(this,b).decode(T);this.dispatchEvent(new MessageEvent("text",{data:z}))}catch{this.dispatchEvent(new MessageEvent("fail",{data:T}))}i=h+1,m=!1}O=o[h]}if(!m)if(s){let h=o.subarray(i),u=new Uint8Array(s.length+h.length);u.set(s),u.set(h,s.length),s=u}else i<o.length&&(s=o.subarray(i))}}else s&&(this.dispatchEvent(new MessageEvent("raw",{data:s})),s=void 0),this.dispatchEvent(new Event("close"))}catch(d){s&&(this.dispatchEvent(new MessageEvent("raw",{data:s})),s=void 0),this.dispatchEvent(new ErrorEvent("error",{message:d.message,error:d})),this.dispatchEvent(new Event("close"))}})()}},k=new WeakMap,b=new WeakMap,p(x,"SPLIT_UTF_8",0),p(x,"SPLIT_UTF_16_LE",1),p(x,"SPLIT_UTF_16_BE",2),x),U=W;let X=class extends EventTarget{static sleep(e){return new Promise(t=>{self.AbortSignal?AbortSignal.timeout(e).addEventListener("abort",t):setTimeout(t,e)})}#i;#t;#e=!1;get finished(){return this.#e}finish(){this.#e=!0,this.#t&&this.#t()}wait(){if(!this.#e)return this.#i}constructor(){super(),this.#i=new Promise(e=>{this.#t=()=>{this.#e=!0,e()}})}},R=X;let K="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_",N=new Uint8Array(1),_=e=>{let t="";for(;e>0;)crypto.getRandomValues(N),t+=K[Math.floor(N[0]&63)],e--;return t},l=()=>!!self.debugMode,L=e=>e.replaceAll("\r",`
`).replaceAll(`\r
`,`
`).split(`
`);let y={Server:"Eclipsed","Content-Type":"text/plain","Cache-Control":"no-cache, no-store","Access-Control-Allow-Methods":"GET, POST, PUT, PATCH, OPTIONS","Access-Control-Allow-Origin":"*"},P={Server:"Eclipsed","Content-Type":"text/event-stream","Cache-Control":"no-cache, no-store",Vary:"Authorization, If-Match, Last-Event-ID","Access-Control-Allow-Headers":"Authorization, Accept, Cache-Control, If-Match, Last-Event-ID","Access-Control-Allow-Methods":"GET, POST, PUT, PATCH, OPTIONS","Access-Control-Allow-Origin":"*"},j=2500;let B=Symbol("closedSocket"),w=new TextEncoder,H=w.encode("data: "),q=w.encode(`

`),J=(e,t)=>{for(let n=0;n<e.length;n++){let r=e.charCodeAt(n);if(r<32&&(r!=10&&r!=13||!t||r!=9))throw new RangeError("Control characters are not allowed")}},F=class extends EventTarget{#i;#t=[];#e=[];#s;#u=!1;#d=0;#n=0;#o=0;#c=0;#l=!1;#h=1;#p=0;CLOSED=0;OPEN=3;TX_OPEN=1;RX_OPEN=2;PROBING=1;TRUE=2;FALSE=0;#a=!1;shutdownTimeout=15e3;#r(){let e=this;e.#t.length>e.#o?e.dispatchEvent(new Event("newrx")):e.#t.length<e.#o&&e.dispatchEvent(new Event("deadrx")),e.#e.length>e.#c?e.dispatchEvent(new Event("newtx")):e.#e.length<e.#c&&e.dispatchEvent(new Event("deadtx"));let t=0;if(e.#e.length&&(t|=1),e.#t.length&&(t|=2),t!=e.#n){switch(l()&&console.debug(`[Eclipsed] Old state: ${e.#n}`),l()&&console.debug(`[Eclipsed] New state: ${t}`),t){case 0:{switch(l()&&console.debug(`[Eclipsed] Close all: ${e.#s}`),e.dispatchEvent(new Event("close")),e.#n){case 1:{e.dispatchEvent(new Event("closetx"));break}case 2:{e.dispatchEvent(new Event("closerx"));break}case 3:{e.dispatchEvent(new Event("dangle")),e.dispatchEvent(new Event("closetx")),e.dispatchEvent(new Event("closerx"));break}}break}case 3:{l()&&console.debug(`[Eclipsed] Connect duplex: ${e.#s}`),e.dispatchEvent(new Event("connect"));break}case 1:{switch(e.#n){case 0:{e.dispatchEvent(new Event("connecttx"));break}case 3:{e.dispatchEvent(new Event("closerx")),l()&&console.debug(`[Eclipsed] No duplex: ${e.#s}`),e.dispatchEvent(new Event("dangle"));break}}break}case 2:{switch(e.#n){case 0:{e.dispatchEvent(new Event("connectrx"));break}case 3:{e.dispatchEvent(new Event("closetx")),e.dispatchEvent(new Event("dangle"));break}}break}}e.#n=t}e.#o=e.#t.length,e.#c=e.#e.length}get id(){return this.#s}get readyState(){return this.#n}getRequest(){let e=this;if(e.#t.length)return e.#t[0]}getResponse(){let e=this;if(e.#e.length)return e.#e[0]}sendEvent(e="message"){if(this.#a)throw new Error("Tried to send data through a closed socket");J(e),this.getResponse()[1].enqueue(w.encode(`event: ${e}
`))}sendData(e){if(this.#a)throw new Error("Tried to send data through a closed socket");L(e).forEach(t=>{this.getResponse()[1].enqueue(w.encode(`data: ${t}
`))})}sendDataRaw(e){let t=this;if(t.#a)throw new Error("Tried to send data through a closed socket");if(!e?.BYTES_PER_ELEMENT||e.BYTES_PER_ELEMENT!=1)throw new TypeError("Only Uint8Array is accepted");let n=0,r=!1;for(let c=0;c<e.length;c++){let a=e[c];switch(a){case 10:case 13:r||(t.getResponse()[1].enqueue(H),t.getResponse()[1].enqueue(e.subarray(n,c)),t.getResponse()[1].enqueue(q),r=!0),n=c+1;default:a<32&&(e[c]=32),r=!1}}r||(t.getResponse()[1].enqueue(H),t.getResponse()[1].enqueue(e.subarray(n)),t.getResponse()[1].enqueue(q))}sendComment(e){if(this.#a)throw new Error("Tried to send data through a closed socket");L(e).forEach(t=>{this.getResponse()[1].enqueue(w.encode(`:${t}
`))})}sendFlush(){if(this.#a)throw new Error("Tried to send data through a closed socket");let e=this;e.#l?e.getResponse()[1].enqueue(w.encode(`
`)):e.getResponse()[1].enqueue(w.encode(`id: ${e.#s}.${e.#d}

`)),e.#d++}send(e,t){let n=this;t&&n.sendEvent(t),n.sendData(e),n.sendFlush()}useCustomExt(e){this.#l=e}close(){let e=this;for(l()&&console.debug(`[Eclipsed] Closing down the socket: ${e.#s}...`);e.#t.length>0;)e.#t[0].cancel(),e.#t.splice(0,1);for(;e.#e.length>0;)e.#e[0][1].close(),e.#e.splice(0,1);e.#r()}attachRequest(e){let t=this;this.#t.push(e),t.#r(),t.useCustomExt(!0);let n=new R,r=new U(e.body,0,"utf-8"),c,a="";return r.addEventListener("text",({data:s})=>{console.debug(s);let d=s?.indexOf(":");if(!s?.trim()?.length)a&&(t.dispatchEvent(new MessageEvent(c||"message",{data:a})),c=void 0,a="");else if(s.codePointAt(0)==58)s.indexOf("eclipsed:")==1&&t.dispatchEvent(new MessageEvent("eclipsedext",{data:s.slice(10)}));else if(d>-1){let o=s.slice(0,d),i=d+1;s.codePointAt(d+1)==32&&i++;let f=s.slice(i);switch(o){case"event":{c=f;break}case"data":{a.length&&(a+=`
`),a+=f;break}default:}}}),r.addEventListener("close",()=>{n.finish();let s=t.#t.indexOf(e);s>=0&&t.#t.splice(s,1),t.#r()}),n.wait()}async newResponse(){let e=this,t,n=!0,r=new R,c,a=new ReadableStream({start:o=>{c=o,r.finish()},cancel:o=>{if(r.finished){let i=e.#e.indexOf(t);i>=0&&e.#e.splice(i,1),e.#r()}else n=!1}}),s=structuredClone(P);s.ETag=e.#s;let d=new Response(a,{status:200,headers:s});return await r.wait(),t=[d,c],n&&(e.#e.push(t),e.#r()),d}constructor(e,t,n){super();let r=this;if(!e)throw new Error("Invalid event socket root");if(!t)throw new Error("Invalid socket ID");r.#i=e,r.#s=t,r.#u=!!n,r.addEventListener("connecttx",()=>{r.sendComment("eclipsed:new")}),r.addEventListener("close",async()=>{await R.sleep(Math.max(1e4,r.shutdownTimeout)),r.#n==0&&(r.#a=!0,l()&&console.debug(`[Eclipsed] Socket ${r.#s} shutdown`),r.dispatchEvent(new Event("shutdown")))});let c={};r.addEventListener("eclipsedext",async({data:a})=>{let s=a.split("	"),d=Date.now();switch(s[0]){case"syn":{let o=s[1];c[o]=d,l()&&console.debug("[Eclipsed] Sending SYN/ACK"),r.sendComment(`eclipsed:synack	${o}`);break}case"ack":{let o=s[1],i=d-c[o];i<j?(r.#h=2,l()&&console.debug(`[Eclipsed] Connection ${r.#s} is streamed (${i}ms).`)):(r.#h=0,l()&&console.debug(`[Eclipsed] Connection ${r.#s} is chunked (${i}ms).`)),delete c[s[1]],r.#p=i;break}default:console.debug(`[Eclipsed] Unmatched extension: ${s}`)}})}},M,I,g,S,G,Q=(M=class extends EventTarget{constructor(t=15e3){super();v(this,S);v(this,I,void 0);v(this,g,{});p(this,"shutdownTimeout",15e3);this.shutdownTimeout=t}upgradeEventStream(t){let d;let n=this,r,c=t.headers.get("Accept");switch(c){case"text/event-stream":{r="eventSocket";break}case"application/grpc":{r="grpc";break}default:if(c.indexOf("application/grpc+")>=0)r="grpc";else return{untilRespond:Promise.resolve(),response:new Response("Bad request",{status:400,headers:y})}}if(r=="grpc"&&(t.method=="GET"||t.method=="get"))return{untilRespond:Promise.resolve(),response:new Response("Bad request",{status:400,headers:y})};let a,s;if(t.headers.has("Authorization")&&(s=t.headers.get("Authorization"),s.slice(0,7)=="Bearer "&&(s=s.slice(7))),!s&&t.headers.has("If-Match")&&(s=t.headers.get("If-Match"),s.slice(0,2)=="W/"&&(s=s.slice(2))),t.headers.has("Last-Event-ID")){s=t.headers.get("Last-Event-ID");let o=s.indexOf(".");o>0&&(s=s.slice(0,o))}if(s?a=D(d=n,S,G).call(d,s):l()&&console.debug("[Eclipsed] The new connection has no ID."),a==B)return{untilRespond:Promise.resolve(),response:new Response("Closed socket",{status:404,headers:y})};if(!a){let o=s||_(16);a=new F(n,o),E(n,g)[o]=a,a.addEventListener("newrx",i=>{n.dispatchEvent(new MessageEvent(i.type,{data:a}))}),a.addEventListener("newtx",i=>{n.dispatchEvent(new MessageEvent(i.type,{data:a}))}),a.addEventListener("connectrx",i=>{n.dispatchEvent(new MessageEvent(i.type,{data:a}))}),a.addEventListener("connecttx",i=>{n.dispatchEvent(new MessageEvent(i.type,{data:a}))}),a.addEventListener("connect",i=>{n.dispatchEvent(new MessageEvent(i.type,{data:a}))}),a.addEventListener("dangle",i=>{n.dispatchEvent(new MessageEvent(i.type,{data:a}))}),a.addEventListener("deadrx",i=>{n.dispatchEvent(new MessageEvent(i.type,{data:a}))}),a.addEventListener("deadtx",i=>{n.dispatchEvent(new MessageEvent(i.type,{data:a}))}),a.addEventListener("closerx",i=>{n.dispatchEvent(new MessageEvent(i.type,{data:a}))}),a.addEventListener("closetx",i=>{n.dispatchEvent(new MessageEvent(i.type,{data:a}))}),a.addEventListener("close",i=>{n.dispatchEvent(new MessageEvent(i.type,{data:a}))}),a.addEventListener("shutdown",i=>{E(n,g)[o]=B})}switch(t.method){case"GET":case"get":{return s&&a.useCustomExt(!0),{untilRespond:Promise.resolve(),response:a.newResponse()};break}case"POST":case"post":case"PUT":case"put":case"PATCH":case"patch":{switch(r){case"eventSocket":return{untilRespond:a.attachRequest(t),response:new Response("Client socket send complete",{status:200,headers:P})};case"grpc":return{untilRespond:Promise.resolve(),response:new Response("Client gRPC send complete",{status:200,headers:P})}}break}default:return{untilRespond:Promise.resolve(),response:new Response("Unknown method",{status:405,headers:y})}}}},I=new WeakMap,g=new WeakMap,S=new WeakSet,G=function(t){return console.debug(`[Eclipsed] Does the socket pool have socket ID "${t}"? ${!!E(this,g)[t]}`),E(this,g)[t]},p(M,"EventSocket",F),M),ce=Q;export{ce as default};
