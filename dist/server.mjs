var a=class{#t={};addEventListener(e,t){this.#t[e]||(this.#t[e]=[]),this.#t[e].unshift(t)}removeEventListener(e,t){if(this.#t[e]){let n=this.#t[e].indexOf(t);n>-1&&this.#t[e].splice(n,1),this.#t[e].length<1&&delete this.#t[e]}}dispatchEvent(e,t){let n=new Event(e),i=this;n.data=t,this.#t[e]?.length>0&&this.#t[e].forEach(function(o){o?.call(i,n)}),this[`on${e}`]&&this[`on${e}`](n)}};var s=new TextEncoder,h=s.encode("data: "),l=s.encode("event: "),d=s.encode("id: "),u=s.encode("retry: "),f=s.encode(`

`),r=s.encode(`
`),m="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_-",v={Server:"Eclipsed","Content-Type":"text/html"},E={Server:"Eclipsed","Content-Type":"text/event-stream","Cache-Control":"no-cache"},c=function(e){return e.contains(`
`)||e.contains("\r")},S=class extends a{CLOSED=2;CONNECTING=0;OPEN=1;#t;#c;#s=0;#r=[];#i=!1;#a="";#h=0;#n="";get stream(){return this.#c}get readyState(){return this.#s}close(){this.#s=2,this.dispatchEvent("close"),this.#s<2&&this.#t.close()}#e(e){[t=>{this.#r.push(t)},t=>{this.#t.enqueue(t)},()=>{}][this.#s]()}setEvent(e){c(e)||e?.constructor==String&&(this.#a=e)}setID(e){c(e)||e?.constructor==String&&(this.#n=e)}setRetry(e){e>1&&e<36e5&&(this.#h=+retryTime)}setData(e){if(e?.constructor!=String)return;if(!this.#i){if(this.#h>0&&(this.#e(u),this.#e(s.encode(`${this.#h}`)),this.#e(r)),this.#a?.length>0&&(this.#e(l),this.#e(s.encode(this.#a)),this.#e(r)),!(this.#n?.length>0))for(;this.#n.length<24;)this.#n+=m[Math.floor(Math.random()*64)];this.#e(d),this.#e(s.encode(this.#n)),this.#e(r),this.#i=!0}let t=e.replaceAll("\r",`
`);t=e.replaceAll(`

`,`
`),t.split(`
`).forEach(n=>{this.#e(h),this.#e(s.encode(n)),this.#e(r)})}setCommit(){if(this.#i)this.#e(r),this.#i=!1,this.#a=!1,this.#n="",this.#h=0;else throw new Error("No data sent.")}sendAs=async function(e){this.setRetry(e.retry),this.setID(e.id),this.setEvent(e.event),this.setData(e.data),this.setCommit()};send=async function(e){let t;switch(e?.constructor){case Uint8Array:case Uint8ClampedArray:case Uint16Array:case Uint32Array:case BigUint64Array:case Int8Array:case Int16Array:case Int32Array:case BigInt64Array:case Float32Array:case Float64Array:{t=e;break}case ArrayBuffer:{t=new Uint8Array(e);break}case String:{t=s.encode(e);break}case DataView:{t=new Uint8Array(e.buffer);break}case Blob:{t=new Uint8Array(await e.arrayBuffer());break}default:t=s.encode(JSON.stringify(e))}if(this.#s<2)this.#e(h),this.#e(t),this.#e(f);else throw new TypeError("Sending to a closed EventSourceServer.")};constructor(){super();let e=new ReadableStream({cancel:t=>{this.close()},start:t=>{if(this.#t=t,this.#s=1,this.#r.length>0){let n=0;this.#r.forEach(i=>{n+=i.length,t.enqueue(i)})}this.#r=[],this.dispatchEvent("open")}});this.#c=e}},p=function(e){if(!e.headers.get("Accept").startsWith("text/event-stream"))return{response:new Response("Bad request",{status:400,statusText:"Bad Request",headers:v})};let t=new S;return{socket:t,response:new Response(t.stream,{headers:E})}};export{S as EventSourceServer,p as upgradeEventSource};
