"use strict";let x=["utf-8","utf-16","utf-16be"],M=class extends EventTarget{static SPLIT_UTF_8=0;static SPLIT_UTF_16_LE=1;static SPLIT_UTF_16_BE=2;#a;#e;constructor(e,t=0){if(super(),t?.constructor!=Number||t<0||t>=x.length)throw new TypeError("Invalid split mode");if(t)throw new Error("UTF-16LE/BE currently not implemented");if(!e||e?.constructor!=ReadableStream)throw new TypeError("Not a readable stream");this.#a=e;let o=e.getReader();this.#e=new TextDecoder(x[t],{fatal:!0});let r=!0,n=!0,s;(async()=>{for(o.closed.then(()=>{s&&(this.dispatchEvent(new MessageEvent("raw",{data:s})),s=void 0),this.dispatchEvent(new Event("close")),n=!1}).catch(i=>{s&&(this.dispatchEvent(new MessageEvent("raw",{data:s})),s=void 0),this.dispatchEvent(new ErrorEvent("error",{message:i.message,error:i})),this.dispatchEvent(new Event("close")),n=!1});r&&n;)try{let i=await o.read();if(r=!i.done,r){let a=i.value;if(this.dispatchEvent(new MessageEvent("chunk",{data:a})),a.constructor!=Uint8Array&&a.constructor!=Uint8ClampedArray)this.dispatchEvent(new MessageEvent("fail",{data:a}));else{let c=0,d=0,w=0,E=!1;for(let h=0;h<a.length;h++){switch(a[h]){case 10:{w==13?c++:(E=!0,d=h);break}case 13:{E=!0,d=h;break}default:E=!1}if(E){let u=a.subarray(c,d),v=u;s&&(v=new Uint8Array(s.length+u.length),v.set(s),v.set(u,s.length),s=void 0),this.dispatchEvent(new MessageEvent("raw",{data:v}));try{let L=this.#e.decode(v);this.dispatchEvent(new MessageEvent("text",{data:L}))}catch{this.dispatchEvent(new MessageEvent("fail",{data:v}))}c=h+1,E=!1}w=a[h]}if(!E)if(s){let h=a.subarray(c),u=new Uint8Array(s.length+h.length);u.set(s),u.set(h,s.length),s=u}else c<a.length&&(s=a.subarray(c))}}else s&&(this.dispatchEvent(new MessageEvent("raw",{data:s})),s=void 0),this.dispatchEvent(new Event("close"))}catch(i){s&&(this.dispatchEvent(new MessageEvent("raw",{data:s})),s=void 0),this.dispatchEvent(new ErrorEvent("error",{message:i.message,error:i})),this.dispatchEvent(new Event("close"))}})()}},b=M;let P=class extends EventTarget{static sleep(e){return new Promise(t=>{self.AbortSignal?AbortSignal.timeout(e).addEventListener("abort",t):setTimeout(t,e)})}#a;#e;#t=!1;get finished(){return this.#t}finish(){this.#t=!0,this.#e&&this.#e()}wait(){if(!this.#t)return this.#a}constructor(){super(),this.#a=new Promise(e=>{this.#e=()=>{this.#t=!0,e()}})}},g=P;let I="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_",k=new Uint8Array(1),R=e=>{let t="";for(;e>0;)crypto.getRandomValues(k),t+=I[Math.floor(k[0]&63)],e--;return t},l=()=>!!self.debugMode,m=e=>e.replaceAll("\r",`
`).replaceAll(`\r
`,`
`).split(`
`);let f={Server:"Eclipsed","Content-Type":"text/plain","Cache-Control":"no-cache, no-store","Access-Control-Allow-Methods":"GET, POST, PUT, PATCH, OPTIONS","Access-Control-Allow-Origin":"*"},T={Server:"Eclipsed","Content-Type":"text/event-stream","Cache-Control":"no-cache, no-store",Vary:"Authorization, If-Match, Last-Event-ID","Access-Control-Allow-Headers":"Authorization, Accept, Cache-Control, If-Match, Last-Event-ID","Access-Control-Allow-Methods":"GET, POST, PUT, PATCH, OPTIONS","Access-Control-Allow-Origin":"*"},O=2500;let y=Symbol("closedSocket"),p=new TextEncoder,S=p.encode("data: "),C=p.encode(`

`),D=(e,t)=>{for(let o=0;o<e.length;o++){let r=e.charCodeAt(o);if(r<32&&(r!=10&&r!=13||!t||r!=9))throw new RangeError("Control characters are not allowed")}},A=class extends EventTarget{#a;#e=[];#t=[];#s;#u=!1;#d=0;#n=0;#o=0;#c=0;#l=!1;#h=1;#p=0;CLOSED=0;OPEN=3;TX_OPEN=1;RX_OPEN=2;PROBING=1;TRUE=2;FALSE=0;#r=!1;shutdownTimeout=15e3;#i(){let e=this;e.#e.length>e.#o?e.dispatchEvent(new Event("newrx")):e.#e.length<e.#o&&e.dispatchEvent(new Event("deadrx")),e.#t.length>e.#c?e.dispatchEvent(new Event("newtx")):e.#t.length<e.#c&&e.dispatchEvent(new Event("deadtx"));let t=0;if(e.#t.length&&(t|=1),e.#e.length&&(t|=2),t!=e.#n){switch(l()&&console.debug(`[Eclipsed] Old state: ${e.#n}`),l()&&console.debug(`[Eclipsed] New state: ${t}`),t){case 0:{switch(l()&&console.debug(`[Eclipsed] Close all: ${e.#s}`),e.dispatchEvent(new Event("close")),e.#n){case 1:{e.dispatchEvent(new Event("closetx"));break}case 2:{e.dispatchEvent(new Event("closerx"));break}case 3:{e.dispatchEvent(new Event("dangle")),e.dispatchEvent(new Event("closetx")),e.dispatchEvent(new Event("closerx"));break}}break}case 3:{l()&&console.debug(`[Eclipsed] Connect duplex: ${e.#s}`),e.dispatchEvent(new Event("connect"));break}case 1:{switch(e.#n){case 0:{e.dispatchEvent(new Event("connecttx"));break}case 3:{e.dispatchEvent(new Event("closerx")),l()&&console.debug(`[Eclipsed] No duplex: ${e.#s}`),e.dispatchEvent(new Event("dangle"));break}}break}case 2:{switch(e.#n){case 0:{e.dispatchEvent(new Event("connectrx"));break}case 3:{e.dispatchEvent(new Event("closetx")),e.dispatchEvent(new Event("dangle"));break}}break}}e.#n=t}e.#o=e.#e.length,e.#c=e.#t.length}get id(){return this.#s}get readyState(){return this.#n}getRequest(){let e=this;if(e.#e.length)return e.#e[0]}getResponse(){let e=this;if(e.#t.length)return e.#t[0]}sendEvent(e="message"){if(this.#r)throw new Error("Tried to send data through a closed socket");D(e),this.getResponse()[1].enqueue(p.encode(`event: ${e}
`))}sendData(e){if(this.#r)throw new Error("Tried to send data through a closed socket");m(e).forEach(t=>{this.getResponse()[1].enqueue(p.encode(`data: ${t}
`))})}sendDataRaw(e){let t=this;if(t.#r)throw new Error("Tried to send data through a closed socket");if(!e?.BYTES_PER_ELEMENT||e.BYTES_PER_ELEMENT!=1)throw new TypeError("Only Uint8Array is accepted");let o=0,r=!1;for(let n=0;n<e.length;n++){let s=e[n];switch(s){case 10:case 13:r||(t.getResponse()[1].enqueue(S),t.getResponse()[1].enqueue(e.subarray(o,n)),t.getResponse()[1].enqueue(C),r=!0),o=n+1;default:s<32&&(e[n]=32),r=!1}}r||(t.getResponse()[1].enqueue(S),t.getResponse()[1].enqueue(e.subarray(o)),t.getResponse()[1].enqueue(C))}sendComment(e){if(this.#r)throw new Error("Tried to send data through a closed socket");m(e).forEach(t=>{this.getResponse()[1].enqueue(p.encode(`:${t}
`))})}sendFlush(){if(this.#r)throw new Error("Tried to send data through a closed socket");let e=this;e.#l?e.getResponse()[1].enqueue(p.encode(`
`)):e.getResponse()[1].enqueue(p.encode(`id: ${e.#s}.${e.#d}

`)),e.#d++}send(e,t){let o=this;t&&o.sendEvent(t),o.sendData(e),o.sendFlush()}useCustomExt(e){this.#l=e}close(){let e=this;for(l()&&console.debug(`[Eclipsed] Closing down the socket: ${e.#s}...`);e.#e.length>0;)e.#e[0].cancel(),e.#e.splice(0,1);for(;e.#t.length>0;)e.#t[0][1].close(),e.#t.splice(0,1);e.#i()}attachRequest(e){let t=this;this.#e.push(e),t.#i(),t.useCustomExt(!0);let o=new g,r=new b(e.body,0,"utf-8"),n,s="";return r.addEventListener("text",({data:i})=>{console.debug(i);let a=i?.indexOf(":");if(!i?.trim()?.length)s&&(t.dispatchEvent(new MessageEvent(n||"message",{data:s})),n=void 0,s="");else if(i.codePointAt(0)==58)i.indexOf("eclipsed:")==1&&t.dispatchEvent(new MessageEvent("eclipsedext",{data:i.slice(10)}));else if(a>-1){let c=i.slice(0,a),d=a+1;i.codePointAt(a+1)==32&&d++;let w=i.slice(d);switch(c){case"event":{n=w;break}case"data":{s.length&&(s+=`
`),s+=w;break}default:}}}),r.addEventListener("close",()=>{o.finish();let i=t.#e.indexOf(e);i>=0&&t.#e.splice(i,1),t.#i()}),o.wait()}async newResponse(){let e=this,t,o=!0,r=new g,n,s=new ReadableStream({start:c=>{n=c,r.finish()},cancel:c=>{if(r.finished){let d=e.#t.indexOf(t);d>=0&&e.#t.splice(d,1),e.#i()}else o=!1}}),i=structuredClone(T);i.ETag=e.#s;let a=new Response(s,{status:200,headers:i});return await r.wait(),t=[a,n],o&&(e.#t.push(t),e.#i()),a}constructor(e,t,o){super();let r=this;if(!e)throw new Error("Invalid event socket root");if(!t)throw new Error("Invalid socket ID");r.#a=e,r.#s=t,r.#u=!!o,r.addEventListener("connecttx",()=>{r.sendComment("eclipsed:new")}),r.addEventListener("close",async()=>{await g.sleep(Math.max(1e4,r.shutdownTimeout)),r.#n==0&&(r.#r=!0,l()&&console.debug(`[Eclipsed] Socket ${r.#s} shutdown`),r.dispatchEvent(new Event("shutdown")))});let n={};r.addEventListener("eclipsedext",async({data:s})=>{let i=s.split("	"),a=Date.now();switch(i[0]){case"syn":{let c=i[1];n[c]=a,l()&&console.debug("[Eclipsed] Sending SYN/ACK"),r.sendComment(`eclipsed:synack	${c}`);break}case"ack":{let c=i[1],d=a-n[c];d<O?(r.#h=2,l()&&console.debug(`[Eclipsed] Connection ${r.#s} is streamed (${d}ms).`)):(r.#h=0,l()&&console.debug(`[Eclipsed] Connection ${r.#s} is chunked (${d}ms).`)),delete n[i[1]],r.#p=d;break}default:console.debug(`[Eclipsed] Unmatched extension: ${i}`)}})}},$=class extends EventTarget{static EventSocket=A;#a;#e={};shutdownTimeout=15e3;#t(e){return console.debug(`[Eclipsed] Does the socket pool have socket ID "${e}"? ${!!this.#e[e]}`),this.#e[e]}constructor(e=15e3){super(),this.shutdownTimeout=e}upgradeEventStream(e){let t=this,o,r=e.headers.get("Accept");switch(r){case"text/event-stream":{o="eventSocket";break}case"application/grpc":{o="grpc";break}default:if(r.indexOf("application/grpc+")>=0)o="grpc";else return{untilRespond:Promise.resolve(),response:new Response("Bad request",{status:400,headers:f})}}if(o=="grpc"&&(e.method=="GET"||e.method=="get"))return{untilRespond:Promise.resolve(),response:new Response("Bad request",{status:400,headers:f})};let n,s;if(e.headers.has("Authorization")&&(s=e.headers.get("Authorization"),s.slice(0,7)=="Bearer "&&(s=s.slice(7))),!s&&e.headers.has("If-Match")&&(s=e.headers.get("If-Match"),s.slice(0,2)=="W/"&&(s=s.slice(2))),e.headers.has("Last-Event-ID")){s=e.headers.get("Last-Event-ID");let i=s.indexOf(".");i>0&&(s=s.slice(0,i))}if(s?n=t.#t(s):l()&&console.debug("[Eclipsed] The new connection has no ID."),n==y)return{untilRespond:Promise.resolve(),response:new Response("Closed socket",{status:404,headers:f})};if(!n){let i=s||R(16);n=new A(t,i),t.#e[i]=n,n.addEventListener("newrx",a=>{t.dispatchEvent(new MessageEvent(a.type,{data:n}))}),n.addEventListener("newtx",a=>{t.dispatchEvent(new MessageEvent(a.type,{data:n}))}),n.addEventListener("connectrx",a=>{t.dispatchEvent(new MessageEvent(a.type,{data:n}))}),n.addEventListener("connecttx",a=>{t.dispatchEvent(new MessageEvent(a.type,{data:n}))}),n.addEventListener("connect",a=>{t.dispatchEvent(new MessageEvent(a.type,{data:n}))}),n.addEventListener("dangle",a=>{t.dispatchEvent(new MessageEvent(a.type,{data:n}))}),n.addEventListener("deadrx",a=>{t.dispatchEvent(new MessageEvent(a.type,{data:n}))}),n.addEventListener("deadtx",a=>{t.dispatchEvent(new MessageEvent(a.type,{data:n}))}),n.addEventListener("closerx",a=>{t.dispatchEvent(new MessageEvent(a.type,{data:n}))}),n.addEventListener("closetx",a=>{t.dispatchEvent(new MessageEvent(a.type,{data:n}))}),n.addEventListener("close",a=>{t.dispatchEvent(new MessageEvent(a.type,{data:n}))}),n.addEventListener("shutdown",a=>{t.#e[i]=y})}switch(e.method){case"GET":case"get":{return s&&n.useCustomExt(!0),{untilRespond:Promise.resolve(),response:n.newResponse()};break}case"POST":case"post":case"PUT":case"put":case"PATCH":case"patch":{switch(o){case"eventSocket":return{untilRespond:n.attachRequest(e),response:new Response("Client socket send complete",{status:200,headers:T})};case"grpc":return{untilRespond:Promise.resolve(),response:new Response("Client gRPC send complete",{status:200,headers:T})}}break}default:return{untilRespond:Promise.resolve(),response:new Response("Unknown method",{status:405,headers:f})}}}},z=$;export{z as default};
