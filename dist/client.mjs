"use strict";let B=Object.defineProperty;let F=(r,t,e)=>t in r?B(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;let S=(r,t,e)=>(F(r,typeof t!="symbol"?t+"":t,e),e),M=(r,t,e)=>{if(!t.has(r))throw TypeError("Cannot "+e)};let P=(r,t,e)=>(M(r,t,"read from private field"),e?e.call(r):t.get(r)),L=(r,t,e)=>{if(t.has(r))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(r):t.set(r,e)},D=(r,t,e,d)=>(M(r,t,"write to private field"),d?d.call(r,e):t.set(r,e),e);let O=["utf-8","utf-16","utf-16be"],v,x,y,$=(v=class extends EventTarget{constructor(t,e=0){super();L(this,x,void 0);L(this,y,void 0);if(e?.constructor!=Number||e<0||e>=O.length)throw new TypeError("Invalid split mode");if(e)throw new Error("UTF-16LE/BE currently not implemented");if(!t||t?.constructor!=ReadableStream)throw new TypeError("Not a readable stream");D(this,x,t);let d=t.getReader();D(this,y,new TextDecoder(O[e],{fatal:!0}));let i=!0,o=!0,s;(async()=>{for(d.closed.then(()=>{s&&(this.dispatchEvent(new MessageEvent("raw",{data:s})),s=void 0),this.dispatchEvent(new Event("close")),o=!1}).catch(n=>{s&&(this.dispatchEvent(new MessageEvent("raw",{data:s})),s=void 0),this.dispatchEvent(new ErrorEvent("error",{message:n.message,error:n})),this.dispatchEvent(new Event("close")),o=!1});i&&o;)try{let n=await d.read();if(i=!n.done,i){let a=n.value;if(this.dispatchEvent(new MessageEvent("chunk",{data:a})),a.constructor!=Uint8Array&&a.constructor!=Uint8ClampedArray)this.dispatchEvent(new MessageEvent("fail",{data:a}));else{let l=0,E=0,f=0,h=!1;for(let c=0;c<a.length;c++){switch(a[c]){case 10:{f==13?l++:(h=!0,E=c);break}case 13:{h=!0,E=c;break}default:h=!1}if(h){let u=a.subarray(l,E),w=u;s&&(w=new Uint8Array(s.length+u.length),w.set(s),w.set(u,s.length),s=void 0),this.dispatchEvent(new MessageEvent("raw",{data:w}));try{let m=P(this,y).decode(w);this.dispatchEvent(new MessageEvent("text",{data:m}))}catch{this.dispatchEvent(new MessageEvent("fail",{data:w}))}l=c+1,h=!1}f=a[c]}if(!h)if(s){let c=a.subarray(l),u=new Uint8Array(s.length+c.length);u.set(s),u.set(c,s.length),s=u}else l<a.length&&(s=a.subarray(l))}}else s&&(this.dispatchEvent(new MessageEvent("raw",{data:s})),s=void 0),this.dispatchEvent(new Event("close"))}catch(n){s&&(this.dispatchEvent(new MessageEvent("raw",{data:s})),s=void 0),this.dispatchEvent(new ErrorEvent("error",{message:n.message,error:n})),this.dispatchEvent(new Event("close"))}})()}},x=new WeakMap,y=new WeakMap,S(v,"SPLIT_UTF_8",0),S(v,"SPLIT_UTF_16_LE",1),S(v,"SPLIT_UTF_16_BE",2),v),A=$;let G=class extends EventTarget{static sleep(r){return new Promise(t=>{self.AbortSignal?AbortSignal.timeout(r).addEventListener("abort",t):setTimeout(t,r)})}#e;#t;#r=!1;get finished(){return this.#r}finish(){this.#r=!0,this.#t&&this.#t()}wait(){if(!this.#r)return this.#e}constructor(){super(),this.#e=new Promise(r=>{this.#t=()=>{this.#r=!0,r()}})}},p=G;let W="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_",N=new Uint8Array(1),R=r=>{let t="";for(;r>0;)crypto.getRandomValues(N),t+=W[Math.floor(N[0]&63)],r--;return t},I=()=>!!self.debugMode,k=r=>r.replaceAll("\r",`
`).replaceAll(`\r
`,`
`).split(`
`);let b=3,q=3e3,Y=200,j=2500;let g=new TextEncoder,U=g.encode("data: "),_=g.encode(`

`),H=class extends EventTarget{CONNECTING=0;OPEN=1;CLOSED=2;PROBING=1;TRUE=2;FALSE=0;#e=0;#t="";#r=!1;#n;#c;#l=q;#i=[];#h=1;#o=!1;#E=0;#d;get readyState(){return this.#e}get url(){return this.#t}get withCredentials(){return this.#r}get lastEventId(){return this.#n}fetch;headers={};redirect="follow";referer;refererPolicy="no-referrer-when-downgrade";acceptDuplex=!1;pingInterval=3e4;close(){this.#e=2,this.#c.abort()}constructor(r,t={}){super();let e=this;if(!r)throw new SyntaxError("Invalid URL");let d;try{d=new URL(r)}catch{throw new SyntaxError("Invalid URL")}e.#c=new AbortController,e.#t=r,e.#r=t.withCredentials||e.#r,e.headers=t.headers||e.headers,e.redirect=t.redirect||e.redirect,e.referer=t.referer||e.referer,e.refererPolicy=t.refererPolicy||e.refererPolicy,e.fetch=t.fetch||self.fetch,e.acceptDuplex=t.acceptDuplex||e.acceptDuplex,e.headers.Accept=e.headers.Accept||"text/event-stream",e.headers["Cache-Control"]=e.headers["Cache-Control"]||"no-store";let i=0;(async()=>{for(;e.#e<2&&i<3;)try{e.dispatchEvent(new Event("connecting"));let n=structuredClone(e.headers);e.#n?n["Last-Event-ID"]=e.#n:n["Last-Event-ID"]&&delete n["Last-Event-ID"],e.#o&&e.#d&&(n["If-Match"]=`W/${e.#d}`);let a=new p,l=await e.fetch(e.#t,{method:"GET",cache:"no-store",credentials:e.#r?"include":"omit",priority:"high",signal:e.#c.signal,headers:e.headers,redirect:e.redirect,referer:e.referer,refererPolicy:e.refererPolicy});if(l.status==200){e.#e=e.OPEN,e.dispatchEvent(new Event("open")),i=0,l.headers.has("ETag")&&(e.#d=l.headers.get("ETag")?.replace("W/",""));let E=new A(l.body,0,"utf-8"),f,h="";E.addEventListener("text",({data:c})=>{let u=c?.indexOf(":");if(!c?.trim()?.length)h&&(e.dispatchEvent(new MessageEvent(f||"message",{data:h,origin:e.#t,lastEventId:e.#n})),f=void 0,h="",e.#n=void 0);else if(c.codePointAt(0)==58)c.indexOf("eclipsed:")==1&&e.dispatchEvent(new MessageEvent("eclipsedext",{data:c.slice(10),origin:e.#t,lastEventId:e.#n}));else if(u>-1){let w=c.slice(0,u),m=u+1;c.codePointAt(u+1)==32&&m++;let C=c.slice(m);switch(w){case"event":{f=C;break}case"data":{h.length&&(h+=`
`),h+=C;break}case"id":{c.indexOf("\0")==-1&&(e.#n=C);break}case"retry":{let T=parseInt(T);T&&T>=Y&&(e.#l=T);break}default:}}}),E.addEventListener("close",()=>{a.finish()}),await a.wait(),e.#e=e.CONNECTING,await p.sleep(Math.max(e.#l,q))}else e.dispatchEvent(new ErrorEvent("error",{message:l.statusText})),e.dispatchEvent(new Event("disconnect")),e.dispatchEvent(new Event("close")),e.#e=2}catch(n){switch(n.name){case"AbortError":{e.#e=2,i=b,e.dispatchEvent(new Event("disconnect")),e.dispatchEvent(new Event("close"));break}case"NotAllowedError":{e.#e=2,i=b,e.dispatchEvent(new ErrorEvent("error",{message:n.message,error:n})),e.dispatchEvent(new Event("disconnect")),e.dispatchEvent(new Event("close"));break}case"TypeError":{n.message.indexOf("connection")>-1?(i++,i>b?(e.#e=2,e.dispatchEvent(new ErrorEvent("error",{message:n.message,error:n})),e.dispatchEvent(new Event("disconnect")),e.dispatchEvent(new Event("close"))):await p.sleep(e.#l)):(e.#e=2,i=b,e.dispatchEvent(new ErrorEvent("error",{message:n.message,error:n})),e.dispatchEvent(new Event("disconnect")),e.dispatchEvent(new Event("close")));break}}}})();let o={},s=async()=>{let n=R(16);o[n]=Date.now(),I()&&console.debug("[Eclipsed] Sending SYN"),await e.sendComment(`eclipsed:syn	${n}`)};e.addEventListener("eclipsedext",async({data:n})=>{let a=n.split("	"),l=Date.now();try{switch(a[0]){case"new":{e.#o=!0,await e.#a(),await s(),e.dispatchEvent(new Event("duplex"));break}case"synack":{let E=a[1],f=o[E];if(f){let h=l-f;h<j?e.#h=2:e.#h=0,delete o[E],e.#E=h,await e.sendComment(`eclipsed:ack	${E}`)}break}default:console.debug(`[Eclipsed] Unmatched extension: ${a}`)}}catch(E){console.debug(E)}}),(async()=>{for(;e.#e!=2;)await p.sleep(e.pingInterval),e.#e==1&&await s()})()}get duplexLatency(){return this.#E}get socketId(){let r=this;if(r.#o)return r.#d||r.#n.splice(".")[0]}async#a(r){let t=this;if(t.#e!=t.CLOSED&&(r||t.#i.length<1)){t.readyState==t.CONNECTING&&await p.sleep(t.#l);let e,d=!0,i=new p,o,s=new ReadableStream({start:l=>{o=l,i.finish()},cancel:l=>{if(i.finished){let E=t.#i.indexOf(e);E>=0&&t.#i.splice(E,1),t.#a()}else d=!1}}),n=structuredClone(t.headers);n["If-Match"]=`W/${t.socketId}`;let a=new Request(t.#t,{body:s,method:"POST",cache:"no-store",credentials:t.#r?"include":"omit",priority:"high",signal:t.#c.signal,headers:n,redirect:t.redirect,referer:t.referer,refererPolicy:t.refererPolicy});await i.wait(),(async()=>{try{await t.fetch(a)}catch(l){console.debug(l)}})(),e=[a,o],d&&(t.#i.push(e),I()&&console.debug("[Eclipsed] Created send socket."))}}#s(){let r=this;if(r.#i.length)return r.#i[0]}async sendEvent(r="message",t){let e=this;if(e.#e==e.CLOSED)throw new Error("Tried to send data through a closed socket");t||await e.#a(),errorWithControl(r),e.#s()[1].enqueue(g.encode(`event: ${r}
`))}async sendData(r,t){let e=this;if(e.#e==e.CLOSED)throw new Error("Tried to send data through a closed socket");t||await e.#a(),k(r).forEach(d=>{e.#s()[1].enqueue(g.encode(`data: ${d}
`))})}async sendDataRaw(r,t){let e=this;if(e.#e==e.CLOSED)throw new Error("Tried to send data through a closed socket");if(t||await e.#a(),!r?.BYTES_PER_ELEMENT||r.BYTES_PER_ELEMENT!=1)throw new TypeError("Only Uint8Array is accepted");let d=0,i=!1;for(let o=0;o<r.length;o++){let s=r[o];switch(s){case 10:case 13:i||(e.#s()[1].enqueue(U),e.#s()[1].enqueue(r.subarray(d,o)),e.#s()[1].enqueue(_),i=!0),d=o+1;default:s<32&&(r[o]=32),i=!1}}i||(e.#s()[1].enqueue(U),e.#s()[1].enqueue(r.subarray(d)),e.#s()[1].enqueue(_))}async sendComment(r,t){let e=this;if(e.#e==e.CLOSED)throw new Error("Tried to send data through a closed socket");t||await e.#a(),k(r).forEach(d=>{e.#s()[1].enqueue(g.encode(`:${d}
`))})}async sendFlush(r){let t=this;if(t.#e==t.CLOSED)throw new Error("Tried to send data through a closed socket");r||await t.#a(),t.#s()[1].enqueue(g.encode(`
`))}async send(r,t){let e=this;await e.#a(),t&&e.sendEvent(t,!0),e.sendData(r,!0),e.sendFlush(!0)}},re=H;export{re as default};
