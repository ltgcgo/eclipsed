"use strict";let w=["utf-8","utf-16","utf-16be"],g=class extends EventTarget{static SPLIT_UTF_8=0;static SPLIT_UTF_16_LE=1;static SPLIT_UTF_16_BE=2;#t;#e;constructor(d,l=0){if(super(),l?.constructor!=Number||l<0||l>=w.length)throw new TypeError("Invalid split mode");if(l)throw new Error("UTF-16LE/BE currently not implemented");if(!d||d?.constructor!=ReadableStream)throw new TypeError("Not a readable stream");this.#t=d;let o=d.getReader();this.#e=new TextDecoder(w[l],{fatal:!0});let h=!0,f=!0,e;(async()=>{for(o.closed.then(()=>{e&&(this.dispatchEvent(new MessageEvent("raw",{data:e})),e=void 0),this.dispatchEvent(new Event("close")),f=!1}).catch(s=>{e&&(this.dispatchEvent(new MessageEvent("raw",{data:e})),e=void 0),this.dispatchEvent(new ErrorEvent("error",{message:s.message,error:s})),this.dispatchEvent(new Event("close")),f=!1});h&&f;)try{let s=await o.read();if(h=!s.done,h){let t=s.value;if(this.dispatchEvent(new MessageEvent("chunk",{data:t})),t.constructor!=Uint8Array&&t.constructor!=Uint8ClampedArray)this.dispatchEvent(new MessageEvent("fail",{data:t}));else{let n=0,E=0,u=0,i=!1;for(let a=0;a<t.length;a++){switch(t[a]){case 10:{u==13?n++:(i=!0,E=a);break}case 13:{i=!0,E=a;break}default:i=!1}if(i){let r=t.subarray(n,E),c=r;e&&(c=new Uint8Array(e.length+r.length),c.set(e),c.set(r,e.length),e=void 0),this.dispatchEvent(new MessageEvent("raw",{data:c}));try{let v=this.#e.decode(c);this.dispatchEvent(new MessageEvent("text",{data:v}))}catch{this.dispatchEvent(new MessageEvent("fail",{data:c}))}n=a+1,i=!1}u=t[a]}if(!i)if(e){let a=t.subarray(n),r=new Uint8Array(e.length+a.length);r.set(e),r.set(a,e.length),e=r}else n<t.length&&(e=t.subarray(n))}}else e&&(this.dispatchEvent(new MessageEvent("raw",{data:e})),e=void 0),this.dispatchEvent(new Event("close"))}catch(s){e&&(this.dispatchEvent(new MessageEvent("raw",{data:e})),e=void 0),this.dispatchEvent(new ErrorEvent("error",{message:s.message,error:s})),this.dispatchEvent(new Event("close"))}})()}},p=g;export{p as default};
